generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  externalId     String   @unique @default(uuid())
  role           Role     @default(USER)
  password       String
  username       String   @unique
  email          String   @unique
  posts          Pet[]
  shelter        Shelter?
  firstName      String
  lastName       String
  profilePicture String   @default("https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Default_pfp.svg/1200px-Default_pfp.svg.png")
}

model Pet {
  id          Int      @id @default(autoincrement())
  externalId  String   @unique @default(uuid())
  species     Species
  name        String
  sex         Sex
  ageYear     Int
  ageMonth    Int
  ageLabel    String
  size        Size
  description String
  status      Status
  images      String[]
  User        User     @relation(fields: [userId], references: [externalId])
  userId      String
  createdAt   DateTime @default(now())
}

model Shelter {
  id          Int      @id @default(autoincrement())
  externalId  String   @unique @default(uuid())
  name        String
  contact     String[]
  description String
  events      Event[]
  user        User     @relation(fields: [userId], references: [externalId])
  userId      String   @unique
  logo        String
}

model Event {
  id          Int      @id @default(autoincrement())
  externalId  String   @unique @default(uuid())
  shelter     Shelter  @relation(fields: [shelterId], references: [externalId])
  shelterId   String
  description String
  date        DateTime
}

enum Role {
  USER
  ADMIN
  SHELTER
}

enum Species {
  CAT
  DOG
}

enum Sex {
  MALE
  FEMALE
}

enum Size {
  SMALL
  MEDIUM
  BIG
}

enum Status {
  REVISION
  AVAILABLE
  ADOPTED
  LOST
  FOUND
}
